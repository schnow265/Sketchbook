plugins {
	id 'fabric-loom' version '1.0-SNAPSHOT'
	id 'maven-publish'
	id "com.modrinth.minotaur" version "2.+"
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

release_base_name = project.release_base_name
version = project.mod_version
group = project.maven_group

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.

	maven {
		name = 'Banner++'
		url 'https://server.bbkr.space/artifactory/libs-release/'
	}

	maven {
		name = "TerraformersMC"
		url = "https://maven.terraformersmc.com/"
	}

	maven {
		name = "Ladysnake Libs"
		url = 'https://maven.ladysnake.org/releases'
	}

	maven {
		name = "Patchouli"
		url = 'https://maven.blamejared.com'
	}
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// Uncomment the following line to enable the deprecated Fabric API modules.
	// These are included in the Fabric API production distribution and allow you to update your mod to the latest modules at a later more convenient time.

	// modImplementation "net.fabricmc.fabric-api:fabric-api-deprecated:${project.fabric_version}"
	modImplementation "dev.emi:trinkets:3.7.0"
	modImplementation "vazkii.patchouli:Patchouli:1.20.1-81-FABRIC"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	//withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		// This will only be enabled on Dev
		Snapshots(MavenPublication) {
			artifactId snapshot_base_name
			version = mod_version
			groupId = maven_group
			from components.java
			ext.repo = 'snapshots'
		}

		// This will only be enabled on release
		Release(MavenPublication) {
			artifactId = release_base_name
			version = mod_version
			groupId = maven_group
			from components.java
			ext.repo = 'release'
		}
	}

	repositories {
		maven {
			name "release"
			url "https://maven.pkg.github.com/schnow265/sketchbook"
			credentials {
				username = githubUsername
				password = ghtoken
			}
		}
		maven {
			name "snapshots"
			url "https://maven.pkg.github.com/schnow265/sketchbook"
			credentials {
				username = githubUsername
				password = ghtoken
			}
		}
	}

	afterEvaluate {
		tasks.withType(PublishToMavenRepository) { task ->
			if (task.publication.hasProperty('repo') && task.publication.repo != task.repository.name) {
				task.enabled = false
				task.group = null
			}
		}
	}
}

// Modrinth Publishing
modrinth {
	token = modrinthtoken
	projectId = release_base_name
	versionNumber = mod_version
	versionType = "release"
	uploadFile = remapJar
	gameVersions = ["1.20.1"]
	loaders = ["fabric"]
	dependencies {
		required.project "fabric-api"
		required.project "trinkets"
		required.project "patchouli"

		optional.project "rei"
		optional.project "YHdR6hMt" //Adds Enchantment Lore as Optionel Target.
	}
}

task ReleasePublication {
	group 'Mod Publication'
	description "Publishes Mod to GitHub and Modrinth"

	ReleasePublication.dependsOn publishAllPublicationsToReleaseRepository
	ReleasePublication.dependsOn modrinth

	doLast {
		println 'Mods Published! Get ready to Download!'
	}
}

task SnapshotPublication {
	group 'Mod Publication'
	description 'Publish to Snapshot Repo'

	SnapshotPublication.dependsOn publishAllPublicationsToSnapshotsRepository

	doLast {
		println('Published to snapshot maven')
	}
}